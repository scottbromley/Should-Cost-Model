/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";


export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/SarnieD.gltf");
  return (
    <group ref={group} {...props} dispose={null} scale={5}>
      <group
        rotation={[-2.28582116, 0.05195712, 0.51247776]}
        scale={[0.001, 0.001, 0.001]}
      >
        <group position={[-45.57884262, -42.8979953, 109.22112505]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_0.geometry}
            material={materials["93_0"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_3.geometry}
            material={nodes.Object_3.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_1.geometry}
            material={nodes.Object_1.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_2.geometry}
            material={nodes.Object_2.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_4.geometry}
            material={nodes.Object_4.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_5.geometry}
            material={nodes.Object_5.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_6.geometry}
            material={nodes.Object_6.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_7.geometry}
            material={nodes.Object_7.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_11.geometry}
            material={materials["89_0"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_10.geometry}
            material={materials["22_0"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_9.geometry}
            material={nodes.Object_9.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_8.geometry}
            material={nodes.Object_8.material}
          />
        </group>
      </group>
        <group
          position={[0.11117792, -0.05376356, -0.098]}
          rotation={[-2.34662776, 0.46328316, 0.66997143]}
          scale={0.0995747}
        >
          <group position={[-1e-8, 0, 0.03622212]} rotation={[Math.PI / 2, 0, 0]}>
            <group rotation={[-Math.PI / 2, 0, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.bitcoin_Material_0.geometry}
                material={materials["Material 1"]}
              />
            </group>
          </group>
        </group>
      <group
        position={[-0.1014953, 0.155, 0.23370257]}
        rotation={[-1.659704, 0.04197017, -0.11616233]}
        scale={[0.1, 0.1, 0.1]}
      >
        <group position={[-1e-8, 0, 0.03622212]} rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.bitcoin_Material_0_1.geometry}
              material={materials["Material 2"]}
            />
          </group>
        </group>
      </group>
      <group
        position={[0.00957939, 0.358, -0.161]}
        rotation={[-0.59995678, -0.00481527, -0.13792955]}
        scale={0.1}
      >
        <group position={[-1e-8, 0, 0.03622212]} rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.bitcoin_Material_0_2.geometry}
              material={materials.Material}
            />
          </group>
        </group>
      </group>
      <directionalLight
        intensity={1}
        decay={2}
        color="#fcfcfc"
        position={[0, 0.08, 0]}
        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.001}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus_3.geometry}
        material={materials["Blaze 3"]}
        position={[0, 0.16081123, -0.00351398]}
        rotation={[-0.6981317, 0, 0]}
        scale={0.00105553}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus_2.geometry}
        material={materials["Blaze 2"]}
        position={[0, 0.15, 0]}
        rotation={[-2.44346095, 0.51171883, -0.24664403]}
        scale={0.00105553}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus.geometry}
        material={materials.Blaze}
        position={[0, 0.15, -0.00078892]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.00105553}
      />
    </group>
  );
}

useGLTF.preload("/SarnieD.gltf");
